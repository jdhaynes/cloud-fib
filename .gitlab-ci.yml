# This pipeline assumes a Docker executer with socket binding to the host Docker daemon.
image: docker

stages:
  - test
  - build
  - deploy

.docker-login: &docker-login
  - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"

test-api:
  stage: test
  script:
    - docker build -t jackhaynes/cloud-fib-api -f ./api/Dockerfile.dev ./api
    - docker run jackhaynes/cloud-fib-api pytest -v

test-worker:
  stage: test
  script:
    - docker build -t jackhaynes/cloud-fib-worker -f ./worker/Dockerfile.dev ./worker
    - docker run jackhaynes/cloud-fib-worker pytest -v

build-api:
  stage: build
  only:
    - main
  script:
    - *docker-login
    - docker build -t jackhaynes/cloud-fib-api ./api
    - docker push jackhaynes/cloud-fib-api

build-worker:
  stage: build
  only:
    - main
  script:
    - *docker-login
    - docker build -t jackhaynes/cloud-fib-worker ./worker
    - docker push jackhaynes/cloud-fib-worker

build-proxy:
  stage: build
  only:
    - main
  script:
    - *docker-login
    - docker build -t jackhaynes/cloud-fib-proxy ./proxy
    - docker push jackhaynes/cloud-fib-proxy

deploy:
  stage: deploy
  only:
    - main
  image: python:3.9-alpine
  before_script:
    - apk add zip
    - pip install awscli
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws configure set region $AWS_DEFAULT_REGION
  script:
    - zip fib-cloud-${CI_COMMIT_SHA}.zip docker-compose.yml
    - aws s3 cp fib-cloud-${CI_COMMIT_SHA}.zip s3://${S3_BUCKET_NAME}/fib-cloud-${CI_COMMIT_SHA}.zip
    - >
      aws elasticbeanstalk create-application-version 
      --application-name $EB_APPLICATION_NAME 
      --version-label fib-cloud-${CI_COMMIT_SHA} 
      --source-bundle S3Bucket=${S3_BUCKET_NAME},S3Key=fib-cloud-${CI_COMMIT_SHA}.zip
    - >
      aws elasticbeanstalk update-environment
      --environment-name ${EB_ENVIRONMENT_NAME}
      --version-label fib-cloud-${CI_COMMIT_SHA}
